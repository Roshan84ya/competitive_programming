# question link :- https://leetcode.com/explore/featured/card/top-interview-questions-easy/92/array/564/

# approach
# step :- 1
# first remove all the decreasing element from the starting of the array i.e
# if array are like [ 5,4,3,2,1] then the answer will be 0 as 
# the stock rate of every day[i] < stock rate at day[j] where i < j so if we buy and sell and stock then we will be going in loss

# step :- 2
# now try to break the array in several arrays i.e when the arr[i] > arr[j] then break the array where i>j
# now for every array ( the one which we have breaked calculate the profit) sum up the local profit will give the global profit


# solution 


class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        
        # step 1st i.e removing all the non decreasing element from the starting
        # [7,6,4,3,1]
        # [7,1,5,3,6,4]
        
        i = 1
        index = 0
        while i < len(prices):
            if prices[i-1] > prices[i]:
                index +=1
            else:
                break
            i+=1
                
        prices = prices[index:]
        if len(prices) < 2:
            return 0
        

        i = 1
        arr = [float("inf")  , float("-inf")]
        ans = 0
        flag = 1
        
        while i < len(prices):
            if prices[i] >=prices[i-1]:
                arr[0] = min(arr[0] , prices[i-1])
                arr[1] = max(arr[1], prices[i])
                flag = 1
            else:
                if (arr[0] == float("inf")) :
                    ans += 0 
                else:
                    ans  += arr[1]-arr[0]
                arr = [float("inf")  , float("-inf")]
                flag = 0
            i+=1
             
        if flag:
            return ans +( arr[1]-arr[0])
        else:
            return ans
                 
